2+2
2+2
median(vendas$Valor)
median(vendas$Custo)
setwd("D:/DSA/PowerBI/Cap12")
getwd()
vendas <- read.csv("vendas.csv", fileEncoding = "windows-1252")
View(vendas)
str(vendas)
summary(vendas$Valor)
summary(vendas$Custo)
?mean
mean(vendas$Valor)
mean(vendas$Custo)
?weighted.mean
weighted.mean(vendas$Valor, w = vendas$Custo)
resultado <- moda(vendas$Valor)
moda <- function(v) {
valor_unico <- unique(v)
valor_unico[which.max(tabulate(match(v, valor_unico)))]
}
resultado <- moda(vendas$Valor)
print(resultado)
print(resultado)
install.packages("ggplot2")
library(ggplot2)
ggplot(vendas) +
stat_summary(aes(x = Estado,
y = Valor),
fun = mean,
geom = "bar",
fill = "lightgreen",
col = "grey50") +
labs(title = "Média de Valor Por Estado")
ggplot(vendas) +
stat_summary(aes(x = Estado,
y = Valor),
fun = mean,
geom = "bar",
fill = "lightgreen",
col = "grey50") +
labs(title = "Média de Valor Por Estado", tag = "A")
ggplot(vendas) +
stat_summary(aes(x = Estado,
y = Valor),
fun = mean,
geom = "bar",
fill = "lightgreen",
col = "grey50") +
labs(title = "Média de Valor Por Estado" to center)
ggplot(vendas) +
stat_summary(aes(x = Estado,
y = Valor),
fun = mean,
geom = "bar",
fill = "lightgreen",
col = "grey50") +
labs(title = "Média de Valor Por Estado" center)
ggplot(vendas) +
stat_summary(aes(x = Estado,
y = Valor),
fun = mean,
geom = "bar",
fill = "lightgreen",
col = "grey50") +
labs(title = "Média de Valor Por Estado")
ggeasy::easy_center_title()
ggplot(vendas) +
stat_summary(aes(x = Estado,
y = Valor),
fun = mean,
geom = "bar",
fill = "lightgreen",
col = "grey50") +
labs(title = "Média de Valor Por Estado")
xlab(label)
ylab(label)
ggtitle(label, subtitle = waiver())
ggplot(vendas) +
stat_summary(aes(x = Estado,
y = Valor),
fun = mean,
geom = "bar",
fill = "lightgreen",
col = "grey50") +
labs(title = "Média de Valor Por Estado")
ggplot(vendas) +
stat_summary(aes(x = Estado,
y = Valor),
fun = mean,
geom = "bar",
fill = "lightgreen",
col = "grey50") +
labs(title = "Média de Valor Por Estado", alt = "1")
ggplot(vendas) +
stat_summary(aes(x = Estado,
y = Valor),
fun = mean,
geom = "bar",
fill = "lightgreen",
col = "grey50") +
labs(title = "Média de Valor Por Estado", alt = "31")
ggplot(vendas) +
stat_summary(aes(x = Estado,
y = Valor),
fun = mean,
geom = "bar",
fill = "lightgreen",
col = "grey50") +
labs(title = "Média de Valor Por Estado", alt = 31)
ggplot(vendas) +
stat_summary(aes(x = Estado,
y = Valor),
fun = mean,
geom = "bar",
fill = "lightgreen",
col = "grey50") +
labs(title = "Média de Valor Por Estado")
setwd("D:/DSA/PowerBI/Cap12")
getwd()
vendas <- read.csv("vendas.csv", fileEncoding = "windows-1252")
View(vendas)
str(vendas)
summary(vendas$Valor)
var(vendas$Valor)
sd(vendas$Valor)
ggplot(vendas) +
stat_summary(aes(x = Estado,
y = Valor),
fun = mean,
geom = "bar",
fill = "lightgreen",
col = "grey50") +
labs(title = "Média de Valor Por Estado")
vendas <- read.csv("vendas.csv", fileEncoding = "windows-1252")
vendas <- read.csv("vendas.csv", fileEncoding = "windows-1252")
head(vendas)
tail(vendas)
tail(vendas)
view(vendas)
summary(vendas$Valor)
summary(vendas[l('Valor', 'Custo')])
summary(vendas[c('Valor', 'Custo')])
summary(vendas[c('Valor', 'Custo')])
mean(vendas$Valor)
median(vendas$Valor)
quantile(vendas$Valor)
quantile(vendas$Valor, probs = c(0.01, 0.99))
quantile(vendas$Valor, probs = c(0.55, 0.99))
quantile(vendas$Valor, seq(from = 0, to = 1, by = 0.20))
IQR(vendas$Valor) #Diferença entre o Quartil3 e Quartil1
range(vendas$Valor)
summary(vendas$Valor)
diff(range(vendas$Valor))
setwd("D:/DSA/PowerBI/Cap12")
getwd()
notas <- read.csv("notas.csv", fileEncoding = "windows-1252")
View(notas)
notas <- read.csv("notas.csv", fileEncoding = "windows-1252")
tail(notas)
head(notas)
View(notas)
mean(notas$TurmaA)# Média da Turma A
mean(notas$TurmaA)# Média da Turma A
var(notas$TurmaA)# Variação de Nota da Turma A
var(notas$TurmaB)# Variação de Nota da Turma B
var(notas$TurmaA)# Variação de Nota da Turma A
View(notas)
100*sd(notas$TurmaA)/mean(notas$TurmaA) #dado em porcentagem
a <- notas(notas$TurmaA)
a <- notas(TurmaA)
a <- notas$TurmaA
a
a
a <- rle(sort(numbers))
b <- rle(sort(a))
b
notas <- c(notas$TurmaA)
b <- rle(sort(notas))
b
notasTA <- rle(sort(notas$TurmaA))
notasTA <- c(notas$TurmaA)
notasTA <- c(notas$TurmaA)
notas <- c(notas$TurmaA)
notas <- c(notas$TurmaA)
a <- notas$TurmaA
a <- notas$TurmaA
notas <- read.csv("notas.csv", fileEncoding
a <- notas$TurmaA
notas <- read.csv("notas.csv", fileEncoding = "windows-1252")
head(notas)
tail(notas)
View(notas)
a <- notas$TurmaA
b <- rle(sort(a))
print(b <- rle(sort(a)))
print(notaA <- rle(sort(a)))
b <- notas$TurmaB
print(notaB <- rle(sort(b)))
> b <- data.frame(number=a$values, n=a$lengths)
b <- data.frame(number=a$values, n=a$lengths)
b <- data.frame(number=notaA$values, n=notaA$lengths)
b
b <- notas$TurmaB
print(notaB <- rle(sort(b)))
print(bb <- data.frame(number=notaB$values, n=notaB$lengths))
print(data.frame(number=notaA$values, n=notaA$lengths))
a <- notas$TurmaA
notaA <- rle(sort(a))
print(data.frame(number=notaA$values, n=notaA$lengths))
100*sd(notas$TurmaA)/mean(notas$TurmaA) #dado em porcentagem Turma A
100*sd(notas$TurmaB)/mean(notas$TurmaB) #dado em porcentagem Turma B
100*sd(notas$TurmaB)/mean(notas$TurmaB) #dado em porcentagem Turma B
100*sd(notas$TurmaA)/mean(notas$TurmaA) #dado em porcentagem Turma A
a <- notas$TurmaA
notaA <- rle(sort(a))
print(data.frame(number=notaA$values, n=notaA$lengths))
b <- notas$TurmaB
notaB <- rle(sort(b))
print(data.frame(number=notaB$values, n=notaB$lengths))
dados <- read.csv("usuarios.csv",
dec = ".",
sep = ",",
h = T,
fileEncoding = "windows-1252")
View(dados)
View(dados)
names(dados)
str(dados)
mean(dados$grau_instrucao)
freq <- table(dados$grau_instrucao)
View(freq)
freqq <- table(dados$grau_instrucao)
View(freqq)
freq <- table(dados$grau_instrucao)
View(freq)
freq_rel <- prop.table(freq)
View(freq_rel)
p_freq_rel <- 100 * prop.table(freq_rel)
View(p_freq_rel)
View(p_freq_rel,"%")
View(p_freq_rel, "%")
View(p_freq_rel"%")
freq <- c(freq, sum(freq))
View(freq)
View(freq)
dados <- read.csv("usuarios.csv",
dec = ".",
sep = ",",
h = T,
fileEncoding = "windows-1252")
freq <- table(dados$grau_instrucao)
freq_rel <- prop.table(freq)
p_freq_rel <- 100 * prop.table(freq_rel)
View(p_freq_rel)
freq <- c(freq, sum(freq))
View(freq)
View(freq)
names(freq)[4] <- "Total"
View(freq)
p_freq_rel <- 100 * prop.table(freq_rel)
View(p_freq_rel)
View(p_freq_rel)
freq <- c(freq, sum(freq))
View(freq)
dados <- read.csv("usuarios.csv",
dec = ".",
sep = ",",
h = T,
fileEncoding = "windows-1252")
freq <- c(freq, sum(freq))
freq <- table(dados$grau_instrucao)
freq_rel <- prop.table(freq)
freq <- c(freq
View(freq)
dados <- read.csv("usuarios.csv",
dec = ".",
sep = ",",
h = T,
fileEncoding = "windows-1252")
View(dados)
names(dados)
str(dados)
summary(dados$salario)
summary(dados$grau_instrucao)
mean(dados$salario)
mean(dados$grau_instrucao)
# Tabela de Frequência Absoluta
freq <- table(dados$grau_instrucao)
View(freq)
# Tabela de frequência Relativas
freq_rel <- prop.table(freq)
View(freq_rel)
p_freq_rel <- 100 * prop.table(freq_rel)
View(p_freq_rel)
freq <- c(freq, sum(freq))
View(freq)
names(freq)[4] <- "Total"
View(freq)
freq_rel <- c(freq_rel, sum(freq_rel))
p_freq_rel <- c(p_freq_rel, sum(p_freq_rel))
tabela_final <- cbind(freq,
freq_rel = round(freq_rel, digits = 2),
p_freq_rel = round(p_freq_rel, digits = 2))
View(tabela_final)
vetor_total_resultados = c(3, 12, 5, 18, 45)
names(vetor_total_resultados) = c("A", "B", "C", "D", "E")
vetor_total_resultados
barplot(vetor_total_resultados)
barplot(vetor_total_resultados, col = c(1,2,3,4,5))
png("barplot.png", width = 480, height = 480 )
barplot(vetor_total_resultados,
col = rgb(0.5,0.1,0.6,0.6),
xlab = "Categorias",
ylab = "Valores",
main = "Barplot em R",
ylim = c(0,60) )
dev.off()
library(ggplot2)
View(mtcars)
ggplot(mtcars, aes(x = as.factor(cyl) )) +
geom_bar()
ggplot(mtcars, aes(x = as.factor(cyl) )) +
geom_bar()
library(ggplot2)
View(mtcars)
ggplot(mtcars, aes(x = as.factor(cyl) )) +
geom_bar()
